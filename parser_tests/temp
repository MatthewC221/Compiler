class Program {
  void main() {
} // missing closing brace
class Program {
  int i	// missing semicolon
}

class Program {
  int i[];	// missing array size
}

class Program {
  void main() {
    int i = 0;	// initializers not allowed
  }
}

class Program {
  void main() {
  }

  boolean a, b;	// field decls must be first
}

class Program {
  int a[2+3];	// bad array decl
}

class Program {
  void main() {
    int callout;	// callout is a reserved word
  }
}

class Program {
  void main() {
    int b;
    b = 2 + 7 = 12;	// bad expression
  }
}

class Program {
  void main() {
    Int b;	// should be int
  }
}

class Program {
  void foo() {
    int a;
    a = 0;
    // missing closing brace
  void main() {
    int b;
  }
}

class Program {
  void foo() {
    int a;
    a = 0;
  }
  void main() {
    int;	// missing variable name
  }
}

class Program {
  void foo() {
    int a;
    a = 0;
  }
  void main() {
    int a b;	// missing comma
  }
}

class Program {
  main() {	// no return type
  }
}

class Program {
  int main(a) {	// no parameter type
  }
}

class Program {
  int main(int a) {
    foo(int);	// type in function call
  }
}

class Program {
  void main() {
    if () { // no condition
    }
  }
}

class Program {
  void main() {
    0xcafe();	// bad identifier
  }
}

class Program {
  void main() {
    callout(5);	// first arg must be a string
  }
}

class Program {
  int A[0xA];

  void bar() {
    forpar i = 0, 0xA {
      A[i] = i;
    }
  }

  void main() {
    bar();
  }
}
class Program {
  int A[10];

  void bar() {
    forpar i = 0, 10 {
      A[i] = i;
    }
  }

  void main() {
    bar();
  }
}
class Program {
  int i;
}
class Program {
  int i[10];
}
class Program {
  void main() {
  }
}
class Program {
  void main() {
    a = -3 * 4 / 6 + (F[b+2] - foo());
  }
}
class Program {
  int foo() {
    return 0;
  }

  int main() {
    return foo();
  }
}
class Program {
  int a;

  int add(int a, int b) {
    return a + b;
  }

  int main() {
    a = add(2, 3);
    return a;
  }
}
class Program {
  int abs(int a) {
    int b;
    if (a < 0) {
      b = -a;
    }
    else {
      b = a;
    }

    return b;
  }

  int main() {
    return abs(-2);
  }
}
class Program {
  void bar(int a) {
    for i = 0, a {
      a = a - 1;
    }
  }

  void main() {
    bar(10);
  }
}
class Program {
  void bar(int a) {
    for i = 0, a {
      callout("printf", "%d\n", i);
    }
  }

  void main() {
    bar(10);
  }
}
class Program {
  void bar(int a) {

    for i = 0, a {
      callout("printf", "%d\n", i);
      if (a == 4) {
	break;
      }
    }
  }

  void main() {
    bar(10);
  }
}
class Program {
  int A[10];

  void bar() {
    for i = 0, 10 {
      A[i] = i;
    }
  }

  void main() {
    bar();
  }
}
class Program {
  int A[0xA];

  void bar() {
    for i = 0, 0xA {
      A[i] = i;
    }
  }

  void main() {
    bar();
  }
}
class Program {
  int abs(int a) {
    if (a < 0) {
      int b;
      b = -a;
      return b;
    }

    return a;
  }

  void main() {
    abs(-5);
  }
}
class Program {
  int abs(int a) {
    boolean b;
    b = a < 0;

    if (b) {
      return -a;
    }
    else {
      return a;
    }
  }

  void main() {
    abs(-5);
  }
}
class Program {
  boolean b;
  
  int abs(int a) {
    b = a < 0;

    if (b) {
      return -a;
    }
    else {
      return a;
    }
  }

  void main() {
    abs(-5);
  }
}
class Program {
  void main() {
    int char;
    char = 'a';
    callout("printf", "%c\n", char);
  }
}
class Program {
  void main() {
    int a;
    int a;	// semanitcally bad, but gramatically ok
  }
}
class Program {
  void main() {
    foo();	// semanitcally bad, but gramatically ok
  }

  void foo() {}
}
class Program {
}

class A {
}

class hello {
}

class Prog {
}

class crab {
}

int new;
int temp;

boolean hi;

boolean ProgA() {
}

void PROGRAM() {
}

int a[5];
int b[123];
int c[12];
int a;

int c[-123];
